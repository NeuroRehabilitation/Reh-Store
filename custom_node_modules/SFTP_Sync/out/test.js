"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
console.clear();
const main_1 = __importDefault(require("./main"));
const path_1 = __importDefault(require("path"));
const fs_extra_1 = __importDefault(require("fs-extra"));
console.log("SFTP Backup test");
(() => __awaiter(void 0, void 0, void 0, function* () {
    const username = "SampleUser";
    let syncList = [];
    let fromSoftware = fs_extra_1.default.readdirSync(`C:\\Users\\teixe\\Documents\\RehStore\\${username}`);
    for (let i = 0; i < fromSoftware.length; i++) {
        fs_extra_1.default.readdirSync(`C:\\Users\\teixe\\Documents\\RehStore\\${username}\\${fromSoftware[i]}`).forEach(item => {
            syncList.push({
                from: path_1.default.join(`C:\\Users\\teixe\\Documents\\RehStore\\${username}\\${fromSoftware[i]}`, item, "5cc4e26f6ba5d2d2ce2f818404cc71223063f08c5b66592f1ee9ddd0db053d89"),
                to: path_1.default.join(`/${username}`, fromSoftware[i], item, "5cc4e26f6ba5d2d2ce2f818404cc71223063f08c5b66592f1ee9ddd0db053d89")
            });
        });
    }
    yield (0, main_1.default)("rehstore.arditi.pt", 8444, username, "SamplePass", syncList);
}))();
